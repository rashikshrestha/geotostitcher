#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.5
#  in conjunction with Tcl version 8.6
#    Oct 18, 2022 02:00:11 PM +0545  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import project1_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40' # X11 color: #666666
_ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black' 
_tabfg2 = 'black' 
_tabbg1 = 'grey75' 
_tabbg2 = 'grey89' 
_bgmode = 'light' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran:
       return
    style = ttk.Style()
    if sys.platform == "win32":
       style.theme_use('winnative')
    style.configure('.',background=_bgcolor)
    style.configure('.',foreground=_fgcolor)
    style.configure('.',font='TkDefaultFont')
    style.map('.',background =
       [('selected', _compcolor), ('active',_ana2color)])
    if _bgmode == 'dark':
       style.map('.',foreground =
         [('selected', 'white'), ('active','white')])
    else:
       style.map('.',foreground =
         [('selected', 'black'), ('active','black')])
    _style_code_ran = 1

class geoto_stitcher:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("726x750+682+134")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1,  1)
        top.title("GeoTo Stitcher")
        top.configure(highlightcolor="black")

        self.top = top

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        _style_code()
        self.configs_block = ttk.Labelframe(self.top)
        self.configs_block.place(relx=0.028, rely=0.015, relheight=0.2
                , relwidth=0.942)
        self.configs_block.configure(relief='')
        self.configs_block.configure(text='''Configs''')

        self.TButton1 = ttk.Button(self.configs_block)
        self.TButton1.place(relx=0.857, rely=0.167, height=31, width=80
                , bordermode='ignore')
        self.TButton1.configure(command=project1_support.select_input_dir)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Select''')
        self.TButton1.configure(compound='left')

        self.TButton2 = ttk.Button(self.configs_block)
        self.TButton2.place(relx=0.857, rely=0.453, height=31, width=80
                , bordermode='ignore')
        self.TButton2.configure(command=project1_support.select_output_dir)
        self.TButton2.configure(takefocus="")
        self.TButton2.configure(text='''Select''')
        self.TButton2.configure(compound='left')

        self.input_dir = tk.Entry(self.configs_block)
        self.input_dir.place(relx=0.177, rely=0.167, height=26, relwidth=0.667
                , bordermode='ignore')
        self.input_dir.configure(background="white")
        self.input_dir.configure(font="TkFixedFont")
        self.input_dir.configure(selectbackground="#c4c4c4")

        self.Label1 = tk.Label(self.configs_block)
        self.Label1.place(relx=0.022, rely=0.173, height=25, width=77
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='w')
        self.Label1.configure(compound='left')
        self.Label1.configure(text='''Input Dir''')

        self.Label1_1 = tk.Label(self.configs_block)
        self.Label1_1.place(relx=0.287, rely=1.48, height=25, width=77
                , bordermode='ignore')
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(anchor='w')
        self.Label1_1.configure(compound='left')
        self.Label1_1.configure(text='''Input Dir''')

        self.Label2 = tk.Label(self.configs_block)
        self.Label2.place(relx=0.022, rely=0.413, height=25, width=98
                , bordermode='ignore')
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(anchor='w')
        self.Label2.configure(compound='left')
        self.Label2.configure(text='''Output Dir''')

        self.Label3 = tk.Label(self.configs_block)
        self.Label3.place(relx=0.022, rely=0.687, height=25, width=98
                , bordermode='ignore')
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(anchor='w')
        self.Label3.configure(compound='left')
        self.Label3.configure(text='''Config File''')

        self.output_dir = tk.Entry(self.configs_block)
        self.output_dir.place(relx=0.177, rely=0.453, height=26, relwidth=0.667
                , bordermode='ignore')
        self.output_dir.configure(background="white")
        self.output_dir.configure(font="TkFixedFont")
        self.output_dir.configure(selectbackground="#c4c4c4")

        self.config_file = tk.Entry(self.configs_block)
        self.config_file.place(relx=0.177, rely=0.727, height=26, relwidth=0.667
                , bordermode='ignore')
        self.config_file.configure(background="white")
        self.config_file.configure(font="TkFixedFont")
        self.config_file.configure(selectbackground="#c4c4c4")

        self.TButton2_1 = ttk.Button(self.configs_block)
        self.TButton2_1.place(relx=0.857, rely=0.72, height=31, width=80
                , bordermode='ignore')
        self.TButton2_1.configure(command=project1_support.select_config_file)
        self.TButton2_1.configure(takefocus="")
        self.TButton2_1.configure(text='''Select''')
        self.TButton2_1.configure(compound='left')

        self.preprocess_block = tk.LabelFrame(self.top)
        self.preprocess_block.place(relx=0.028, rely=0.227, relheight=0.12
                , relwidth=0.945)
        self.preprocess_block.configure(relief='groove')
        self.preprocess_block.configure(text='''Pre Process''')

        self.start_preprocess = ttk.Button(self.preprocess_block)
        self.start_preprocess.place(relx=0.292, rely=0.4, height=31, width=80
                , bordermode='ignore')
        self.start_preprocess.configure(command=project1_support.start_preprocess)
        self.start_preprocess.configure(takefocus="")
        self.start_preprocess.configure(text='''Start''')
        self.start_preprocess.configure(compound='left')

        self.Label4 = tk.Label(self.preprocess_block)
        self.Label4.place(relx=0.481, rely=0.567, height=27, width=151
                , bordermode='ignore')
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(anchor='w')
        self.Label4.configure(compound='left')
        self.Label4.configure(text='''No of recordings:''')

        self.no_of_rec = tk.Label(self.preprocess_block)
        self.no_of_rec.place(relx=0.706, rely=0.611, height=17, width=59
                , bordermode='ignore')
        self.no_of_rec.configure(activebackground="#f9f9f9")
        self.no_of_rec.configure(anchor='w')
        self.no_of_rec.configure(compound='left')
        self.no_of_rec.configure(text='''0''')

        self.Label4_1 = tk.Label(self.preprocess_block)
        self.Label4_1.place(relx=0.481, rely=0.256, height=18, width=131
                , bordermode='ignore')
        self.Label4_1.configure(activebackground="#f9f9f9")
        self.Label4_1.configure(anchor='w')
        self.Label4_1.configure(compound='left')
        self.Label4_1.configure(text='''Project Name:''')

        self.project_name = tk.Label(self.preprocess_block)
        self.project_name.place(relx=0.671, rely=0.256, height=17, width=190
                , bordermode='ignore')
        self.project_name.configure(activebackground="#f9f9f9")
        self.project_name.configure(anchor='w')
        self.project_name.configure(compound='left')
        self.project_name.configure(text='''Unknown''')

        self.select_rec = ttk.Button(self.preprocess_block)
        self.select_rec.place(relx=0.073, rely=0.4, height=31, width=120
                , bordermode='ignore')
        self.select_rec.configure(command=project1_support.select_rec)
        self.select_rec.configure(takefocus="")
        self.select_rec.configure(text='''Select Rec''')
        self.select_rec.configure(compound='left')

        self.process_pgf_block = tk.LabelFrame(self.top)
        self.process_pgf_block.place(relx=0.028, rely=0.356, relheight=0.168
                , relwidth=0.945)
        self.process_pgf_block.configure(relief='groove')
        self.process_pgf_block.configure(text='''Process PGF''')

        self.process_pgf = ttk.Progressbar(self.process_pgf_block)
        self.process_pgf.place(relx=0.554, rely=0.254, relwidth=0.41
                , relheight=0.0, height=19, bordermode='ignore')
        self.process_pgf.configure(length="281")

        self.start_process_pgf = ttk.Button(self.process_pgf_block)
        self.start_process_pgf.place(relx=0.073, rely=0.587, height=31, width=80
                , bordermode='ignore')
        self.start_process_pgf.configure(command=project1_support.start_process_pgf)
        self.start_process_pgf.configure(takefocus="")
        self.start_process_pgf.configure(text='''Start''')
        self.start_process_pgf.configure(compound='left')

        self.Label5 = tk.Label(self.process_pgf_block)
        self.Label5.place(relx=0.633, rely=0.452, height=26, width=109
                , bordermode='ignore')
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(anchor='w')
        self.Label5.configure(compound='left')
        self.Label5.configure(text='''Recording:''')

        self.process_pgf_rec = tk.Label(self.process_pgf_block)
        self.process_pgf_rec.place(relx=0.783, rely=0.452, height=26, width=69
                , bordermode='ignore')
        self.process_pgf_rec.configure(activebackground="#f9f9f9")
        self.process_pgf_rec.configure(anchor='w')
        self.process_pgf_rec.configure(compound='left')
        self.process_pgf_rec.configure(text='''0''')

        self.Label7 = tk.Label(self.process_pgf_block)
        self.Label7.place(relx=0.624, rely=0.683, height=25, width=70
                , bordermode='ignore')
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(anchor='w')
        self.Label7.configure(compound='left')
        self.Label7.configure(text='''Status:''')

        self.process_pgf_status = tk.Label(self.process_pgf_block)
        self.process_pgf_status.place(relx=0.72, rely=0.683, height=25, width=149
                , bordermode='ignore')
        self.process_pgf_status.configure(activebackground="#f9f9f9")
        self.process_pgf_status.configure(anchor='w')
        self.process_pgf_status.configure(compound='left')
        self.process_pgf_status.configure(text='''None''')

        self.pgf_threads = tk.Spinbox(self.process_pgf_block, from_=1.0, to=100.0)
        self.pgf_threads.place(relx=0.219, rely=0.254, relheight=0.214
                , relwidth=0.118, bordermode='ignore')
        self.pgf_threads.configure(activebackground="#f9f9f9")
        self.pgf_threads.configure(background="white")
        self.pgf_threads.configure(font="TkDefaultFont")
        self.pgf_threads.configure(highlightbackground="black")
        self.pgf_threads.configure(selectbackground="#c4c4c4")
        self.value_list = ['5',]
        self.pgf_threads.configure(values=self.value_list)

        self.pgf_label = tk.Label(self.process_pgf_block)
        self.pgf_label.place(relx=0.029, rely=0.254, height=32, width=130
                , bordermode='ignore')
        self.pgf_label.configure(activebackground="#f9f9f9")
        self.pgf_label.configure(anchor='w')
        self.pgf_label.configure(compound='left')
        self.pgf_label.configure(text='''No of Threads''')

        self.auto_fill = ttk.Button(self.top)
        self.auto_fill.place(relx=0.854, rely=0.92, height=31, width=80)
        self.auto_fill.configure(command=project1_support.auto_fill)
        self.auto_fill.configure(takefocus="")
        self.auto_fill.configure(text='''Auto Fill''')
        self.auto_fill.configure(compound='left')

        self.process_jpg_block = tk.LabelFrame(self.top)
        self.process_jpg_block.place(relx=0.028, rely=0.539, relheight=0.156
                , relwidth=0.945)
        self.process_jpg_block.configure(relief='groove')
        self.process_jpg_block.configure(text='''Process JPG''')

        self.process_jpg = ttk.Progressbar(self.process_jpg_block)
        self.process_jpg.place(relx=0.554, rely=0.248, relwidth=0.41
                , relheight=0.0, height=19, bordermode='ignore')
        self.process_jpg.configure(length="281")

        self.start_process_jpg = ttk.Button(self.process_jpg_block)
        self.start_process_jpg.place(relx=0.073, rely=0.59, height=31, width=80
                , bordermode='ignore')
        self.start_process_jpg.configure(command=project1_support.start_process_jpg)
        self.start_process_jpg.configure(takefocus="")
        self.start_process_jpg.configure(text='''Start''')
        self.start_process_jpg.configure(compound='left')

        self.Label5_2 = tk.Label(self.process_jpg_block)
        self.Label5_2.place(relx=0.633, rely=0.453, height=24, width=109
                , bordermode='ignore')
        self.Label5_2.configure(activebackground="#f9f9f9")
        self.Label5_2.configure(anchor='w')
        self.Label5_2.configure(compound='left')
        self.Label5_2.configure(text='''Recording:''')

        self.process_jpg_rec = tk.Label(self.process_jpg_block)
        self.process_jpg_rec.place(relx=0.783, rely=0.453, height=24, width=69
                , bordermode='ignore')
        self.process_jpg_rec.configure(activebackground="#f9f9f9")
        self.process_jpg_rec.configure(anchor='w')
        self.process_jpg_rec.configure(compound='left')
        self.process_jpg_rec.configure(text='''0''')

        self.Label7_2 = tk.Label(self.process_jpg_block)
        self.Label7_2.place(relx=0.624, rely=0.684, height=23, width=70
                , bordermode='ignore')
        self.Label7_2.configure(activebackground="#f9f9f9")
        self.Label7_2.configure(anchor='w')
        self.Label7_2.configure(compound='left')
        self.Label7_2.configure(text='''Status:''')

        self.process_jpg_status = tk.Label(self.process_jpg_block)
        self.process_jpg_status.place(relx=0.72, rely=0.684, height=23, width=149
                , bordermode='ignore')
        self.process_jpg_status.configure(activebackground="#f9f9f9")
        self.process_jpg_status.configure(anchor='w')
        self.process_jpg_status.configure(compound='left')
        self.process_jpg_status.configure(text='''None''')

        self.jpg_threads = tk.Spinbox(self.process_jpg_block, from_=1.0, to=100.0)
        self.jpg_threads.place(relx=0.219, rely=0.248, relheight=0.222
                , relwidth=0.118, bordermode='ignore')
        self.jpg_threads.configure(activebackground="#f9f9f9")
        self.jpg_threads.configure(background="white")
        self.jpg_threads.configure(font="TkDefaultFont")
        self.jpg_threads.configure(highlightbackground="black")
        self.jpg_threads.configure(selectbackground="#c4c4c4")
        self.value_list = ['5',]
        self.jpg_threads.configure(values=self.value_list)

        self.jpg_label = tk.Label(self.process_jpg_block)
        self.jpg_label.place(relx=0.029, rely=0.248, height=30, width=130
                , bordermode='ignore')
        self.jpg_label.configure(activebackground="#f9f9f9")
        self.jpg_label.configure(anchor='w')
        self.jpg_label.configure(compound='left')
        self.jpg_label.configure(text='''No of Threads''')

        self.stitch_360_block = tk.LabelFrame(self.top)
        self.stitch_360_block.place(relx=0.028, rely=0.707, relheight=0.168
                , relwidth=0.945)
        self.stitch_360_block.configure(relief='groove')
        self.stitch_360_block.configure(text='''Stitch 360''')

        self.stitch_360 = ttk.Progressbar(self.stitch_360_block)
        self.stitch_360.place(relx=0.554, rely=0.254, relwidth=0.41
                , relheight=0.0, height=19, bordermode='ignore')
        self.stitch_360.configure(length="281")

        self.start_sitch_360 = ttk.Button(self.stitch_360_block)
        self.start_sitch_360.place(relx=0.073, rely=0.587, height=31, width=80
                , bordermode='ignore')
        self.start_sitch_360.configure(command=project1_support.start_stitch_360)
        self.start_sitch_360.configure(takefocus="")
        self.start_sitch_360.configure(text='''Start''')
        self.start_sitch_360.configure(compound='left')

        self.Label5_2_1 = tk.Label(self.stitch_360_block)
        self.Label5_2_1.place(relx=0.633, rely=0.452, height=26, width=109
                , bordermode='ignore')
        self.Label5_2_1.configure(activebackground="#f9f9f9")
        self.Label5_2_1.configure(anchor='w')
        self.Label5_2_1.configure(compound='left')
        self.Label5_2_1.configure(text='''Recording:''')

        self.stitch_360_rec = tk.Label(self.stitch_360_block)
        self.stitch_360_rec.place(relx=0.783, rely=0.452, height=26, width=69
                , bordermode='ignore')
        self.stitch_360_rec.configure(activebackground="#f9f9f9")
        self.stitch_360_rec.configure(anchor='w')
        self.stitch_360_rec.configure(compound='left')
        self.stitch_360_rec.configure(text='''0''')

        self.Label7_2_1 = tk.Label(self.stitch_360_block)
        self.Label7_2_1.place(relx=0.624, rely=0.683, height=25, width=70
                , bordermode='ignore')
        self.Label7_2_1.configure(activebackground="#f9f9f9")
        self.Label7_2_1.configure(anchor='w')
        self.Label7_2_1.configure(compound='left')
        self.Label7_2_1.configure(text='''Status:''')

        self.stitch_360_status = tk.Label(self.stitch_360_block)
        self.stitch_360_status.place(relx=0.72, rely=0.683, height=25, width=149
                , bordermode='ignore')
        self.stitch_360_status.configure(activebackground="#f9f9f9")
        self.stitch_360_status.configure(anchor='w')
        self.stitch_360_status.configure(compound='left')
        self.stitch_360_status.configure(text='''None''')

        self.stitch_360_threads = tk.Spinbox(self.stitch_360_block, from_=1.0, to=100.0)
        self.stitch_360_threads.place(relx=0.219, rely=0.254, relheight=0.214
                , relwidth=0.118, bordermode='ignore')
        self.stitch_360_threads.configure(activebackground="#f9f9f9")
        self.stitch_360_threads.configure(background="white")
        self.stitch_360_threads.configure(font="TkDefaultFont")
        self.stitch_360_threads.configure(highlightbackground="black")
        self.stitch_360_threads.configure(selectbackground="#c4c4c4")
        self.value_list = ['1',]
        self.stitch_360_threads.configure(values=self.value_list)
        self.stitch_360_threads.configure(wrap="1")

        self.stitch_360_label = tk.Label(self.stitch_360_block)
        self.stitch_360_label.place(relx=0.029, rely=0.254, height=32, width=130
                , bordermode='ignore')
        self.stitch_360_label.configure(activebackground="#f9f9f9")
        self.stitch_360_label.configure(anchor='w')
        self.stitch_360_label.configure(compound='left')
        self.stitch_360_label.configure(text='''No of Threads''')

        self.close_program = ttk.Button(self.top)
        self.close_program.place(relx=0.413, rely=0.92, height=31, width=80)
        self.close_program.configure(command=project1_support.close_program)
        self.close_program.configure(takefocus="")
        self.close_program.configure(text='''Close''')
        self.close_program.configure(compound='left')

class select_rec:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x431+725+368")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1,  1)
        top.title("Select Recordings")
        top.configure(highlightcolor="black")

        self.top = top

        self.recordings = tk.LabelFrame(self.top)
        self.recordings.place(relx=0.033, rely=0.023, relheight=0.824
                , relwidth=0.917)
        self.recordings.configure(relief='groove')
        self.recordings.configure(text='''Select Recordings''')

        self.unselect_all_rec_1 = tk.Button(self.recordings)
        self.unselect_all_rec_1.place(relx=0.582, rely=0.099, height=36
                , width=119, bordermode='ignore')
        self.unselect_all_rec_1.configure(activebackground="beige")
        self.unselect_all_rec_1.configure(borderwidth="2")
        self.unselect_all_rec_1.configure(command=project1_support.unselect_all_rec)
        self.unselect_all_rec_1.configure(compound='left')
        self.unselect_all_rec_1.configure(text='''Unselect all''')

        self.select_all_rec = tk.Button(self.recordings)
        self.select_all_rec.place(relx=0.2, rely=0.099, height=36, width=99
                , bordermode='ignore')
        self.select_all_rec.configure(activebackground="beige")
        self.select_all_rec.configure(borderwidth="2")
        self.select_all_rec.configure(command=project1_support.select_all_rec)
        self.select_all_rec.configure(compound='left')
        self.select_all_rec.configure(text='''Select all''')

        self.close_select_rec = tk.Button(self.top)
        self.close_select_rec.place(relx=0.433, rely=0.882, height=36, width=89)
        self.close_select_rec.configure(activebackground="beige")
        self.close_select_rec.configure(borderwidth="2")
        self.close_select_rec.configure(command=project1_support.close_select_rec)
        self.close_select_rec.configure(compound='left')
        self.close_select_rec.configure(text='''Select''')

def start_up():
    project1_support.main()

if __name__ == '__main__':
    project1_support.main()




